plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'androidx.navigation.safeargs.kotlin'
}

android {

    namespace 'com.bearya.intelliscreen'

    compileSdk 33

    def currentVersionCode = getVersionCode()

    defaultConfig {
        applicationId "com.bearya.intelliscreen"
        minSdk 22
        targetSdk 33
        versionCode currentVersionCode
        versionName "1.0.0"

        multiDexEnabled true
        vectorDrawables.useSupportLibrary true

        buildFeatures {
            viewBinding true
        }

    }

    signingConfigs {
        config {
            keyAlias 'BeiYa'
            storePassword 'BeiYa123'
            storeFile file('../bearya_keystore.jks')
            keyPassword 'BeiYa!@#'
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            buildConfigField "String", "ApiUrl", BASE_URL
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            debuggable true
            minifyEnabled false
            buildConfigField "String", "ApiUrl", BASE_URL
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            if ("release" == buildType.name)
                output.outputFileName = "IntelliScreen_v${defaultConfig.versionName}.${defaultConfig.versionCode}__release.apk"
            else
                output.outputFileName = "IntelliScreen_v${defaultConfig.versionName}.apk"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = 1.8
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }
    androidResources {
        noCompress '.webp'
    }
}

// 获取版本号
def getVersionCode() {
    def versionFile = file('version.properties')// 读取第一步新建的文件
    if (versionFile.canRead()) {// 判断文件读取异常
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionFile))
        def versionCode = versionProps['VERSION_CODE'].toInteger()// 读取文件里面的版本号
        versionProps['VERSION_CODE'] = (++versionCode).toString()
        versionProps.store(versionFile.newWriter(), null)
        return versionCode // 返回自增之后的版本号
    } else {
        throw new Exception("Could not find version.properties!")
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.activity:activity-ktx:1.5.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.leanback:leanback:1.0.0'
    implementation 'androidx.work:work-runtime-ktx:2.7.1'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'androidx.startup:startup-runtime:1.1.1'
    implementation 'androidx.concurrent:concurrent-futures-ktx:1.1.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    def lifecycle_version = "2.5.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.10"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.10"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"

    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"
    implementation "com.squareup.okhttp3:okhttp:4.9.1"

    implementation 'com.google.android.material:material:1.5.0'
    implementation 'com.google.code.gson:gson:2.9.0'

    implementation 'com.tencent:mmkv:1.2.15'

    implementation 'com.orhanobut:logger:2.2.0'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'com.kaopiz:kprogresshud:1.2.0'
    implementation 'com.github.GrenderG:Toasty:1.5.0'
    implementation 'com.github.razerdp:BasePopup:2.2.20'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.11'
    implementation 'com.github.SheHuan:NiceImageView:1.0.5'
    implementation 'me.jahnen.libaums:core:0.9.1'
    implementation 'me.jahnen.libaums:storageprovider:0.6.2'
    implementation 'org.greenrobot:eventbus:3.2.0'

    kapt 'com.github.bumptech.glide:compiler:4.12.0'
}